import{I as y,i as Pt,B as ot,g as he,c as it,E as st,h as P,F as Q,d as re,p as S,G as Ft,b as Pe,x as lt,C as Et,J as Vt,k as Wt,m as Gt,K as Z,L as rt,r as Ot}from"./common-H5yCEHFv.js";/* empty css              */import{j as Kt,c as jt,a as Ut,r as F,s as Yt,g as ce,h as Fe,e as Ht,t as Ee}from"./commonJquery-ck9jfn5Y.js";import"./bootstrap-select-adag52_O.js";import{C as Ve,b as _t,i as qt,p as Xt,e as Jt,L as Qt,f as Zt,S as $t,c as en,d as tn}from"./chart-s5gNgz83.js";import{b as nn}from"./bots-t-eGkHsJ.js";import{i as an}from"./items-QxHqxA7B.js";import{a as on,b as sn,c as ln,s as ct,v as rn,g as cn,d as pn,m as un}from"./simulatorCalcs-CqtNzYuH.js";Ve.register(_t,qt,Xt,Jt,Qt,Zt,$t,en,tn);const dn=Kt.noConflict();dn(function(e){const pe="DumpMind Target";let $,_,We,ee;const Ge=["rgba(228, 26, 28, .8)","rgba(55, 126, 184, .8)","rgba(36, 192, 36, .8)","rgba(152, 78, 163, .8)","rgba(255, 127, 0, .8)","rgba(255, 255, 51, .8)","rgba(243, 145, 146, .8)","rgba(145, 187, 222, .8)","rgba(135, 232, 135, .8)","rgba(202, 159, 209, .8)","rgba(255, 194, 133, .8)","rgba(163, 163, 0, .8)"],Se=Ge.map(()=>0);let ve=!1;const pt={"0%: None":0,"30%: Armor Integrity Analyzer":30,"40%: Imp. Armor Integrity Analyzer":40,"50%: Exp. Armor Integrity Analyzer":50},ut={"0%: None":null,"25%: Remote Shield":"Remote Shield","25%: Stasis Trap":"Stasis Trap","50%: Phase Wall":"Phase Wall","50%: Remote Force Field (Energy Mantle)":"Remote Force Field","50%: Stasis Bubble":"Stasis Bubble"},dt=["forceBoosterInput","impForceBoosterInput","advForceBoosterInput"],Oe=[.2,.3,.4],mt={"0%: None":1,"30%: Kinecellerator":1.3,"40%: Imp. Kinecellerator":1.4,"50%: Adv. Kinecellerator":1.5},gt=["meleeAnalysisInput","impMeleeAnalysisInput","advMeleeAnalysisInput","expMeleeAnalysisInput"],Ke=[2,3,4,6],je=[y.ImpactWeapon,y.PiercingWeapon,y.SlashingWeapon,y.SpecialMeleeWeapon],Ue=[y.BallisticCannon,y.BallisticGun,y.EnergyCannon,y.EnergyGun,y.Launcher,y.SpecialWeapon],vt=["Core Cannon","Core Stripper","Modified Sigix Sheargun","Sigix Broadsword","Sigix Shearcannon","Sigix Sheargun"],Ye={Huge:30,Large:10,Medium:0,Small:-10,Tiny:-30},ft={"No Siege":{bonus:0,tus:0},"In Siege Mode":{bonus:20,tus:0},"In High Siege Mode":{bonus:30,tus:0},"Entering Siege Mode":{bonus:20,tus:500},"Entering High Siege Mode":{bonus:30,tus:500}};e(()=>bt());function yt(){const a=e("#comparisonNameInput").val();e("#comparisonNameInput").val("");const i=e("#addComparisonButton");i.addClass("disabled"),i.prop("disabled",!0),i.tooltip("hide"),e("#comparisonContainer").removeClass("not-visible");const{colorIndex:l}=Se.reduce((m,C,k)=>C<m.value?{colorIndex:k,value:C}:m,{colorIndex:-1,value:Number.MAX_VALUE});Se[l]+=1;const t=Ie(a,"rgb(0, 0, 0, 0)",Ge[l]);t.data=We,_.data.datasets.push(t);const g=e('<div class="input-group"></div>'),n=e('<input class="form-control" />');n.val(a);const b=e('<button class="btn ml-2" data-toggle="tooltip" title="Removes the dataset.">X</button>');g.append(n[0]),g.append(b[0]),b.tooltip(),b.on("click",()=>{const m=_.data.datasets;m.splice(m.indexOf(t),1),_.update(),m.length===0&&e("#comparisonContainer").addClass("not-visible"),Se[l]-=1,b.tooltip("dispose"),g.remove()}),n.on("change",()=>{t.label=n.val(),_.update()}),e("#comparisonDatasetsContainer").append(g[0]),_.update()}function ae(a){const i=ce(),l=e("#weaponSelectContainer"),t=fe(),g=t?je:Ue,n=[];Object.keys(re).forEach(D=>{const d=re[D];if(d.slot!=="Weapon")return;const p=d;g.includes(p.type)&&p.damageType!=="Special"&&Wt(p,i)&&n.push(D)}),t&&n.push("Ram"),n.sort(Gt);const b=n.map(D=>`<option>${D}</option>`).join(),m=e('<div class="input-group mt-1"></div>'),C=e('<span class="input-group-text" data-toggle="tooltip" title="Name of an equipped weapon to fire">Weapon</span>'),k=e(`<select class="selectpicker" data-live-search="true">${b}</select>`),G=e('<button class="btn part-help-btn" data-html=true data-toggle="popover">?</button>'),M=e(`
        <div class="input-group-prepend ml-2" data-toggle="tooltip" title="The mass of cogmind. Ram damage is a random amount from 0 to (((10 + [mass]) / 5) + 1) * ([speed%] / 100) * [momentum].">
            <span class="input-group-text">Mass</span>
        </div>`),T=e('<input class="form-control" placeholder="0" />'),B=e('<div class="btn-group btn-group-toggle ml-2" data-toggle="buttons"></div>'),Y=e('<div class="input-group-prepend" data-toggle="tooltip" title="Whether to fire the weapon as overloaded (double damage)."></div>'),O=e('<span class="input-group-text">Overload</span>'),r=e('<label class="btn active"><input type="radio" checked name="options">No</input></label>'),I=e('<label class="btn"><input type="radio" name="options">Yes</input></label>'),v=e('<div class="btn-group btn-group-toggle ml-2" data-toggle="buttons"></div>'),f=e('<div class="input-group-prepend" data-toggle="tooltip" title="Whether a Sigix Exoskeleton is equipped (double damage)."></div>'),E=e('<span class="input-group-text">Exoskeleton</span>'),z=e('<label class="btn active"><input type="radio" checked name="options">No</input></label>'),N=e('<label class="btn"><input type="radio" name="options">Yes</input></label>'),A=e(`
        <div class="input-group-prepend ml-2" data-toggle="tooltip" title="How many weapons of this type to have equipped.">
            <span class="input-group-text">Number</span>
        </div>`),s=e('<input class="form-control" placeholder="1" />'),x=e('<button class="btn ml-2" data-toggle="tooltip" title="Removes the weapon.">X</button>');l.append(m[0]),m.append(C[0]),m.append(k[0]),m.append(G[0]),m.append(B[0]),B.append(Y[0]),Y.append(O[0]),B.append(r[0]),B.append(I[0]),m.append(v[0]),v.append(f[0]),f.append(E[0]),v.append(z[0]),v.append(N[0]),m.append(M[0]),m.append(T[0]),m.append(A[0]),m.append(s[0]),m.append(x[0]),F(B),F(v),x.on("click",()=>{m.next().length===0&&ae(""),k.selectpicker("destroy"),x.tooltip("dispose"),m.remove()}),k.selectpicker("val",a);const V=D=>{let d;D in re&&(d=re[D],G.attr("data-content",Ot(d)),G.popover()),d===void 0?(B.addClass("not-visible"),v.addClass("not-visible")):d.overloadStability!==void 0?(B.removeClass("not-visible"),F(v),v.addClass("not-visible")):vt.includes(d.name)&&ce()==="Redacted"?(B.addClass("not-visible"),F(B),v.removeClass("not-visible")):(F(B),B.addClass("not-visible"),F(v),v.addClass("not-visible")),D==="Ram"?(M.removeClass("not-visible"),T.removeClass("not-visible"),A.addClass("not-visible"),s.addClass("not-visible")):(M.addClass("not-visible"),T.addClass("not-visible"),A.removeClass("not-visible"),s.removeClass("not-visible"))};V(a),k.on("changed.bs.select",()=>{m.next().length===0&&ae(""),V(k.selectpicker("val"))}),k.parent().addClass("weapon-dropdown"),x.tooltip(),A.tooltip(),C.tooltip(),M.tooltip(),Y.tooltip(),f.tooltip(),m.find(".btn-light").removeClass("btn-light")}function Ie(a,i,l){return{type:"scatter",data:[],fill:"start",backgroundColor:i,borderColor:l,label:a,pointRadius:0,pointHitRadius:25,showLine:!0,stepped:"before"}}function He(){const a=e("#numFightsInput").val().replace(",","");return S(a,1e5)}async function bt(){await Pt(an,nn),jt("Simulator",e("#headerContainer")),Ut(e(document)),F(e("#combatTypeContainer")),F(e("#xAxisContainer")),F(e("#showLootContainer")),F(e("#onLegsContainer")),e("#comparisonChartNameInput").val(""),xe(),Ae(),e("#spoilerDropdown > button").on("click",i=>{const l=e(i.target).text();e("#spoilers").text(l),Yt(l),e("#spoilerDropdown > button").tooltip("hide"),Ae()}),e("#reset").on("click",()=>{e("#reset").tooltip("hide"),xe()}),e("#botSelect").on("changed.bs.select",()=>{const i=e("#botSelect").selectpicker("val");let l;if(i===pe){const t=ot((ee==null?void 0:ee.entity)??"");if(t===null){e("#enemyInfoButton").addClass("not-visible");return}l=t}else l=he(i);e("#enemyInfoButton").removeClass("not-visible"),e("#enemyInfoButton").attr("data-content",it(l,ce())),l.name==="A-15 Conveyor"?e("#endConditionNoTnc").removeClass("not-visible"):e("#endConditionNoTnc").addClass("not-visible"),Fe(e("#endConditionSelect"))}),e("#combatTypeContainer > label > input").on("change",()=>{Ae()}),e("#showLootContainer > label > input").on("change",()=>{qe()}),e("#simulateButton").on("click",()=>{It()}),e("#cancelButton").on("click",()=>{ve=!0}),e("#addComparisonButton").on("click",()=>{yt()}),e("#comparisonChartNameInput").on("change",()=>{let i=e("#comparisonChartNameInput").val();i===""&&(i="Custom Comparison"),_.options.plugins.title.text=i,_.update()}),e(window).on("click",i=>{const l=e(i.target).parents(".popover").length!=0;l?e(i.target).trigger("blur"):!l&&e(".popover").length>=1&&e('[data-toggle="popover"]').not(i.target).popover("hide")}),e('[data-toggle="tooltip"]').tooltip();const a=he(e("#botSelect").selectpicker("val"));e("#enemyInfoButton").attr("data-content",it(a,ce())),e("#enemyInfoButton").popover(),Ht(e("#enemyInfoButton")),e("#damageReductionSelect").parent().addClass("percent-dropdown"),e("#botSelectContainer > div").addClass("enemy-dropdown"),e("#turnsSinceMovingSelectContainer > div").addClass("turns-since-moving-dropdown"),e("#enemyBehaviorSelectContainer > div").addClass("enemy-behavior-dropdown"),e("#siegeSelectContainer > div").addClass("siege-dropdown"),e("#kinecelleratorSelect").parent().addClass("percent-dropdown"),e("#overloadSelect").parent().addClass("percent-dropdown"),e("#armorIntegSelect").parent().addClass("percent-dropdown"),e("#sneakAttackSelect").parent().addClass("sneak-attack-dropdown"),e("#endConditionSelect").parent().addClass("end-condition-dropdown"),e(".btn-light").removeClass("btn-light"),Ct(),ht()}function Ct(){const a=Ie("Current volley kill %","rgba(0, 98, 0, 0.3)","rgba(0, 196, 0, 1)"),i=Ie("Cumulative kill %","rgba(96, 96, 96, 0.3)","rgba(128, 128, 128, 1)");let l=e("#chart");$=new Ve(l,{type:"scatter",data:{datasets:[a,i]},options:{plugins:{legend:{labels:{font:{size:16}}},title:{display:!0,font:{size:24}}},scales:{x:{grid:{display:!1},ticks:{stepSize:1},min:0,title:{display:!0,font:{size:24},text:"Number of volleys"}},y:{border:{color:"rgba(128, 128, 128, 0.8)",display:!0},grid:{color:"rgba(128, 128, 128, 0.8)"},title:{display:!0,font:{size:24},text:"Percent of kills"},min:0,ticks:{callback:(t,g,n)=>t+"%"}}}}}),l=e("#comparisonChart"),_=new Ve(l,{data:{datasets:[]},options:{plugins:{legend:{labels:{font:{size:16}}},title:{display:!0,font:{size:24},text:"Custom Comparison"}},scales:{x:{grid:{display:!1},title:{display:!0,font:{size:24},text:"Number of time units"},min:0,ticks:{stepSize:100}},y:{border:{color:"rgba(128, 128, 128, 0.8)",display:!0},grid:{color:"rgba(128, 128, 128, 0.8)"},min:0,ticks:{callback:(t,g,n)=>t+"%"},title:{display:!0,font:{size:24},text:"Percent of kills"}}}}})}function ht(){const a=e("#importFromDumpMindButton");a.attr("data-content",`
<span class="input-label dump-input-label d-flex" data-toggle="tooltip"
title="Paste the data created by Luigi's DumpMind below">Paste from <a class="d-contents" href="https://github.com/aronson/WalkMind/tree/main">DumpMind</a> below: </span>
<textarea id="dumpText" rows="10" class="form-control dump-input-textarea mt-3"></textarea>
<div class="d-flex justify-content-end input-group mt-2">
    <button id="dumpSubmitButton" class="btn ml-3">Submit</button>
</div>
`),a.tooltip({title:"Import data from Luigi's DumpMind"}),a.popover({sanitize:!1}),a.on("shown.bs.popover",i=>{a.tooltip("hide");const l=e(`#${e(i.target).attr("aria-describedby")}`).children(".popover-body");l.find("#dumpText").on("click",g=>{g.stopPropagation()}),l.find('[data-toggle="tooltip"]').tooltip();const t=l.find("#dumpSubmitButton");t.on("click",()=>{const g=l.find("#dumpText").val();try{const n=JSON.parse(g);if(n.length==0)Ee(t,"Invalid JSON!","Submit",3e3);else{const b=n.find(C=>C.entity==="Cogmind"),m=n.find(C=>C.entity!=="Cogmind");b===void 0?Ee(t,"Invalid JSON!","Submit",3e3):(St(b,m),a.popover("hide"))}}catch(n){console.log(n),Ee(t,"Failed to load JSON!","Submit",3e3)}})}),e(".popover").on("click",i=>{i.stopPropagation()})}function fe(){return e("#combatTypeMelee").hasClass("active")}function St(a,i){const l=a.inventory.filter(r=>r.equipped).map(r=>st(r.item)).filter(r=>r!=null),t=l.filter(r=>r.slot==="Weapon"),g=l.filter(r=>r.slot==="Propulsion"),n=l.filter(r=>r.slot==="Utility"),b=t.filter(r=>je.includes(r.type)),m=t.filter(r=>Ue.includes(r.type)),C=[];let k;const G=b.length===t.length;G?(e("#combatTypeMelee").children().trigger("click"),k=b):(e("#combatTypeRanged").children().trigger("click"),k=m);for(const r of k){const I=C.find(v=>v.item===r);I===void 0?C.push({item:r,number:1}):I.number+=1}xe(!1);for(const r of C){const I=e("#weaponSelectContainer").children().last().find("select"),v=e("#weaponSelectContainer").children().last().find("input");I.selectpicker("val",r.item.name),r.number>1&&v.val(r.number)}if(G){const r=n.filter(d=>d.name==="Melee Analysis Suite").length,I=n.filter(d=>d.name==="Imp. Melee Analysis Suite").length,v=n.filter(d=>d.name==="Adv. Melee Analysis Suite").length,f=n.filter(d=>d.name==="Exp. Melee Analysis Suite").length;r>0&&e("#meleeAnalysisInput").val(r),I>0&&e("#impMeleeAnalysisInput").val(I),v>0&&e("#advMeleeAnalysisInput").val(v),f>0&&e("#expMeleeAnalysisInput").val(f);const E=n.filter(d=>d.name==="Force Booster").length,z=n.filter(d=>d.name==="Imp. Force Booster").length,N=n.filter(d=>d.name==="Adv. Force Booster").length;E>0&&e("#forceBoosterInput").val(E),z>0&&e("#impForceBoosterInput").val(z),N>0&&e("#advForceBoosterInput").val(N);const A=Math.max(50,n.filter(d=>P(d,!0,"Actuator")).map(d=>d.specialProperty.trait.amount).reduce(Q,0));A>0&&e("#actuatorInput").val(A);const s=n.filter(d=>P(d,!0,"ActuatorArray")).map(d=>d.specialProperty.trait.amount);s.sort();const x=s.pop(),V=s.pop(),D=Z(x,0)+Math.trunc(Z(V,0)/2);D>0&&e("#actuatorArrayInput").val(D),n.find(d=>P(d,!0,"ReactionControlSystem"))!==void 0&&e("#bonusMomentumInput").val(1),e("#speedInput").val(a.speed)}else{let r=n.filter(s=>P(s,!0,"Targeting")).map(s=>s.specialProperty.trait.bonus).reduce(Q,0)+n.filter(s=>P(s,!0,"CombatSuite")).map(s=>s.specialProperty.trait.targeting).reduce(Q,0);t.every(s=>s.type===y.Launcher)&&(r+=n.filter(s=>P(s,!0,"LauncherGuidance")).map(s=>s.specialProperty.trait.bonus).reduce(Q,0)),r>0&&e("#targetingInput").val(r);const I=g.filter(s=>s.type===y.Treads).map(s=>s.size).reduce(Q,0);I>0&&e("#treadsInput").val(I);const v=n.filter(s=>P(s,!0,"ParticleCharging")).map(s=>s.specialProperty.trait.percent);v.sort();const f=v.pop(),E=v.pop(),z=Z(f,0)+Math.trunc(Z(E,0)/2);z>0&&e("#particleChargerInput").val(z),n.find(s=>s.name==="Adv. Kinecellerator")?e("#kinecelleratorSelect").selectpicker("val","50%: Adv. Kinecellerator"):n.find(s=>s.name==="Imp. Kinecellerator")?e("#kinecelleratorSelect").selectpicker("val","40%: Imp. Kinecellerator"):n.find(s=>s.name==="Kinecellerator")&&e("#kinecelleratorSelect").selectpicker("val","30%: Kinecellerator");const N=n.filter(s=>P(s,!0,"SalvageTargeting")).map(s=>s.specialProperty.trait.amount).reduce(Q,0);N>0&&e("#salvageTargetingInput").val(N);const A=n.filter(s=>P(s,!0,"RecoilReduction")).map(s=>s.specialProperty.trait.reduction).reduce(Q,0);if(A>0&&e("#recoilInput").val(A),t.length===1&&(t[0].type===y.EnergyCannon||t[0].type===y.EnergyGun)&&n.find(s=>s.name==="Quantum Capacitor"))e("#cyclerInput").val(50);else if(t.length===1&&t[0].type===y.Launcher&&n.find(s=>s.name==="Launcher Loader"))e("#cyclerInput").val(50);else{const s=Math.max(30,n.filter(x=>P(x,!0,"RangedWeaponCycling")&&x.name!=="Quantum Capacitor"&&x.name!=="Launcher Loader").map(x=>x.specialProperty.trait.amount).reduce(Q,0));s>0&&e("#cyclerInput").val(s)}}n.find(r=>r.name==="Exp. Armor Integrity Analyzer")?e("#armorIntegSelect").selectpicker("val","50%: Exp. Armor Integrity Analyzer"):n.find(r=>r.name==="Imp. Armor Integrity Analyzer")?e("#armorIntegSelect").selectpicker("val","40%: Imp. Armor Integrity Analyzer"):n.find(r=>r.name==="Armor Integrity Analyzer")&&e("#armorIntegSelect").selectpicker("val","30%: Armor Integrity Analyzer");let M=0;if(n.find(r=>P(r,!0,"CombatSuite")))M=8;else{const r=n.filter(f=>P(f,!0,"CoreAnalyzer")).map(f=>f.specialProperty.trait.bonus);r.sort();const I=r.pop(),v=r.pop();M=Z(I,0)+Math.trunc(Z(v,0)/2)}M>0&&e("#coreAnalyzerInput").val(M);const T=n.filter(r=>P(r,!0,"TargetAnalyzer")).map(r=>r.specialProperty.trait.bonus);T.sort();const B=T.pop(),Y=T.pop(),O=Z(B,0)+Math.trunc(Z(Y,0)/2);if(O>0&&e("#targetAnalyzerInput").val(O),ot((i==null?void 0:i.entity)??"")===null){ee=void 0;return}ee=i,_e(),i!==void 0&&e("#botSelect").selectpicker("val",pe)}function q(a){a.selectpicker("val",a.children().val())}function xe(a=!0){if(F(e("#analysisContainer")),F(e("#onLegsContainer")),F(e("#siegeModeContainer")),q(e("#damageReductionSelect")),q(e("#enemyBehaviorSelect")),q(e("#siegeSelect")),q(e("#kinecelleratorSelect")),q(e("#overloadSelect")),q(e("#armorIntegSelect")),q(e("#sneakAttackSelect")),q(e("#endConditionSelect")),e("#numFightsInput").val(""),e("#actionsSinceMovingInput").val(""),e("#tilesRunInput").val(""),e("#targetingInput").val(""),e("#treadsInput").val(""),e("#distanceInput").val(""),e("#particleChargerInput").val(""),e("#salvageTargetingInput").val(""),e("#recoilInput").val(""),e("#cyclerInput").val(""),e("#coreAnalyzerInput").val(""),e("#targetAnalyzerInput").val(""),e("#meleeAnalysisContainer > input").val(""),e("#forceBoosterContainer > input").val(""),e("#speedInput").val(""),e("#actuatorInput").val(""),e("#actuatorArrayInput").val(""),e("#bonusMomentumInput").val(""),e("#initialMomentumInput").val(""),e("#comparisonNameInput").val(""),e("#weaponSelectContainer").empty(),a){const i=fe()?"Mining Claw":"Lgt. Assault Rifle";ae(i)}ae(""),X(""),e("#resultsContainer").addClass("not-visible"),e("#lootContainer").addClass("not-visible")}function ue(a){function i(g){g.removeClass("disabled"),g.prop("disabled",!1)}function l(g){g.addClass("disabled"),g.prop("disabled",!0)}const t=a?l:i;t(e("#spoilers")),t(e("#combatTypeRanged")),t(e("#combatTypeMelee")),t(e("#numFightsInput")),t(e("#reset")),t(e("#botSelect").next()),t(e("#analysisNo")),t(e("#analysisYes")),t(e("#damageReductionSelect").next()),t(e("#actionsSinceMovingInput")),t(e("#onLegsNo")),t(e("#onLegsYes")),t(e("#tilesRunInput")),t(e("#enemyBehaviorSelect").next()),t(e("#targetingInput")),t(e("#siegeSelect").next()),t(e("#treadsInput")),t(e("#distanceInput")),t(e("#particleChargerInput")),t(e("#kinecelleratorSelect").next()),t(e("#salvageTargetingInput")),t(e("#recoilInput")),t(e("#cyclerInput")),t(e("#overloadSelect").next()),t(e("#meleeAnalysisContainer > input")),t(e("#forceBoosterContainer > input")),t(e("#actuatorInput")),t(e("#actuatorArrayInput")),t(e("#bonusMomentumInput")),t(e("#initialMomentumInput")),t(e("#speedInput")),t(e("#sneakAttackSelect").next()),t(e("#armorIntegSelect").next()),t(e("#coreAnalyzerInput")),t(e("#targetAnalyzerInput")),t(e("#weaponSelectContainer button").not(".weapon-help-btn")),t(e("#weaponSelectContainer .btn").not(".weapon-help-btn")),t(e("#weaponSelectContainer input")),t(e("#xAxisVolleys")),t(e("#xAxisTime")),t(e("#showLootNo")),t(e("#showLootYes")),t(e("#endConditionSelect").next()),a?(e("#cancelButton").removeClass("not-visible"),e("#simulateButton").addClass("not-visible")):(e("#cancelButton").addClass("not-visible"),e("#simulateButton").removeClass("not-visible"))}function X(a){e("#statusText").text(a)}function It(){const a=e("#botSelect").selectpicker("val"),i=[];if(e("#weaponSelectContainer select").each((c,u)=>{const o=e(u).selectpicker("val");if(o in re){const h=re[o],R=S(e(u).parent().nextAll("input").not(".not-visible").val(),1),ne=!e(u).parent().nextAll(".btn-group").children("label").first().hasClass("active"),ie=!e(e(u).parent().nextAll(".btn-group")[1]).children("label").first().hasClass("active");for(let se=0;se<R;se++)i.push({def:h,overloaded:ne||ie})}else if(o==="Ram"){const h={categories:[],category:Ft.None,hackable:!1,index:0,integrity:0,name:"Ram",fullName:"Ram",noPrefixName:"Ram",projectileCount:1,range:2,rating:0,ratingString:"",size:0,slot:"N/A",spoiler:"None",type:y.ImpactWeapon,mass:S(e(u).parent().nextAll("input").val(),0),noRepairs:!1};i.push({def:h,overloaded:!1})}}),!(a in Pe)&&a!==pe){X(`Bot ${a} is invalid, this is probably a bug.`);return}if(i.length===0){X("There must be at least 1 weapon selected.");return}const l=[];let t=0;function g(c,u){const o=c.type===y.Protection,h=c.type===y.Treads,R=c.coverage??0,ne=o||h?2*R:R;l.push({armorAnalyzedCoverage:o?0:R,armorAnalyzedSiegedCoverage:o?0:ne,coverage:R,def:c,integrity:u,initialIndex:t++,protection:o,selfDamageReduction:1,siegedCoverage:ne})}let n,b,m,C;if(a===pe){const c=ee;n=he(c.entity),C=0;for(const u of c.inventory.filter(o=>o.equipped)){const o=st(u.item);o!==null&&(g(o,u.integrity),C+=o.coverage??0)}b=c.exposure,C+=b,m=c.integrity}else n=he(a),n.componentData.concat(n.armamentData).concat(n.componentOptionData.map(c=>c[0])).concat(n.armamentOptionData.map(c=>c[0])).forEach(c=>{for(let u=0;u<c.number;u++){const o=lt(c.name);g(o,o.integrity)}}),b=n.coreCoverage,C=n.totalCoverage,m=n.coreIntegrity;const k=b+l.reduce((c,u)=>c+u.armorAnalyzedCoverage,0),G=b+l.reduce((c,u)=>c+u.siegedCoverage,0),M=b+l.reduce((c,u)=>c+u.siegedCoverage,0),T=e("#enemyBehaviorSelect").selectpicker("val"),B=ut[e("#damageReductionSelect").selectpicker("val")],Y=on(l,B);let O=0;n.speed<100?O=Math.trunc((100-n.speed)/5):O=0;const r=T==="Already Sieged/Fight"&&l.find(c=>c.def.type===y.Treads&&c.def.siege!==void 0)!==void 0,I={armorAnalyzedCoverage:k,armorAnalyzedSiegedCoverage:G,behavior:T,coreCoverage:b,coreDisrupted:!1,coreIntegrity:m,corruption:0,def:n,defensiveState:Y,externalDamageReduction:B,immunities:n.immunities,initialCoreIntegrity:m,parts:l,regen:sn(n),resistances:n.resistances===void 0?{}:n.resistances,running:T==="Running",runningEvasion:O,runningMomentum:T==="Running"?3:0,salvage:0,sieged:r,siegedCoverage:M,totalCoverage:C,tusToSiege:T==="Siege/Fight"?500:0};let v=!1;const f=fe(),E=S(e("#treadsInput").val(),0),z=f?null:ft[e("#siegeSelect").selectpicker("val")];let N=0;f||(N=S(e("#targetingInput").val(),0));const A=[0,0,0,0],s=[0,0,0];if(f){gt.map((u,o)=>{A[o]=S(e(`#${u}`).val(),0)}),dt.map((u,o)=>{s[o]=S(e(`#${u}`).val(),0)});let c=2;for(let u=s.length-1;u>=0;u--)s[u]>c?(s[u]=c,c=0):c-=s[u]}let x=S(e("#distanceInput").val(),6);x<=1&&(x=1);const V=S(e("#recoilInput").val(),0),D=i.reduce((c,u)=>ln(u.def,E,V)+c,0),d=S(e("#targetAnalyzerInput").val(),0),p=S(e("#salvageTargetingInput").val(),0),w=i.map((c,u)=>{const o=c.def;let h=0,R=0,ne,ie=0,se=0,nt;if(o.damage!==void 0){if(o.damage.includes("-")){const U=o.damage.split("-");h=parseInt(U[0]),R=parseInt(U[1])}else h=parseInt(o.damage),R=h;if(o.type===y.BallisticGun||o.type===y.BallisticCannon){const U=e("#kinecelleratorSelect").selectpicker("val"),ge=mt[U];h=Math.trunc(h*ge),h>R&&(R=h)}else if(f){let U=0;for(let W=0;W<Ke.length;W++)U+=A[W]*Ke[W];h=Math.min(U+h,R);let ge=0,Ne=0;for(let W=s.length-1;W>=0;W--)s[W]==2?(ge=1.5*Oe[W],Ne+=2):s[W]==1&&(ge+=Oe[W]*(Ne==0?1:.5),Ne+=1);R=Math.floor(R*(1+ge))}ne=o.damageType}if(o.explosionDamage!==void 0){if(o.explosionDamage.includes("-")){const U=o.explosionDamage.split("-");ie=parseInt(U[0]),se=parseInt(U[1])}else ie=parseInt(o.explosionDamage),se=ie;nt=o.explosionType}let Le;o.criticalType===Et.Meltdown?Le=o.critical:Le=o.critical===void 0||o.critical===0?0:o.critical+d;let le=f?70:60;f||(le+=N),n.size in Ye?le+=Ye[n.size]:console.log(`${a} has invalid size ${n.size}`),o.targeting!==void 0&&(le+=o.targeting);const Mt=S(o.delay,0);f&&u!=0&&(le+=10);const wt=o.disruption??0,Tt=o.explosionDisruption??0,Dt=ct(o.spectrum),Rt=ct(o.explosionSpectrum),zt=o.minChunks??1,Lt=o.maxChunks??1;o.name==="Ram"&&(v=!0);const Nt=o.type==="Launcher"&&o.name!="Sigix Terminator"&&o.name!="Supercharged Sigix Terminator"&&o.name!="Vortex Catalyst Activator";let at=o.salvage??0;return p>0&&o.projectileCount==1&&(o.type===y.BallisticGun||o.type===y.EnergyGun)&&(at+=p),{accelerated:o.type===y.EnergyGun||o.type===y.EnergyCannon,accuracy:le,baseAccuracy:le,criticalChance:Le,criticalType:o.criticalType,damageMin:h,damageMax:R,damageType:ne,def:o,delay:Mt,disruption:wt,explosionChunksMin:zt,explosionChunksMax:Lt,explosionDisruption:Tt,explosionMin:ie,explosionMax:se,explosionSpectrum:Rt,explosionType:nt,isMissile:Nt,numProjectiles:o.projectileCount,overflow:!o.type.includes("Gun"),overloaded:c.overloaded,salvage:at,spectrum:Dt}}),H=1+Math.max(S(e("#particleChargerInput").val(),0),0)/100,j=e("#armorIntegSelect").selectpicker("val"),J=pt[j],de=S(e("#coreAnalyzerInput").val(),0),ke=S(e("#actuatorArrayInput").val(),0),L=[];if(f){const c=20+ke;w.forEach((u,o)=>{if(o!=0){let h=c+Math.trunc((w[0].delay-u.delay)/10);h=Math.min(h,100),h=Math.max(h,0),L.push(h)}})}const Be=S(e("#speedInput").val(),100),ye=S(e("#bonusMomentumInput").val(),0),be=S(e("#initialMomentumInput").val(),0),Me=e("#sneakAttackSelect").selectpicker("val"),we=Math.max(0,Math.min(99,S(e("#actuatorInput").val(),0))),Te=Math.max(0,Math.min(99,S(e("#cyclerInput").val(),0))),Ce=1-(f?we:Te)/100,De=f?w[0].delay+rn[1]:cn(w.map(c=>c.def),Ce);let te,oe;const Xe=S(e("#actionsSinceMovingInput").val(),2);Xe==0?(te=f?0:-10,oe=0):Xe==1?(te=0,oe=10):(te=10,oe=10);const Je=e("#onLegsYes").hasClass("active")?S(e("#tilesRunInput").val(),0):0;Je>0&&!f&&(te-=Math.min(Je,3)*5);const Qe=[];for(const c of I.parts)Qe.push({item:c.def,numDrops:0,totalCritRemoves:0,totalCorruptionPercent:0,totalFried:0,totalIntegrity:0});const At={numKills:0,items:Qe,matterBlasted:0,matterDrop:0},kt={action1Accuracy:te,action2Accuracy:oe,armorAnalyzerChance:J,analysis:e("#analysisYes").hasClass("active"),chargerBonus:H,coreAnalyzerChance:de,distance:x,followupChances:L,forceBoosters:s,melee:f,meleeAnalysis:A,momentum:{bonus:ye,current:ye+be,initial:be},numTreads:E,ramming:v,recoil:D,recoilReduction:V,siegeBonus:z,sneakAttack:!1,sneakAttackStrategy:Me,speed:Be,targetingComputerBonus:N,volleyTime:De,volleyTimeModifier:Ce},Bt=e("#endConditionSelect").selectpicker("val"),Ze={actionNum:0,botState:I,endCondition:Bt,initialBotState:I,killTus:{},killVolleys:{},lootState:At,offensiveState:kt,tus:0,weapons:w};ue(!0),ve=!1;let me=0;const Re=He(),$e=performance.now();let ze=$e,et=ze;function tt(){for(;me<Re;me++){if(me%100===0){if(ve){X("Cancelled simulation"),ve=!1,ue(!1);return}const c=performance.now();if(c-ze>30){if(ze=c,c-et>100){const u=(me*100/Re).toFixed(1);X(`${String(u).padStart(4,"0")} % completed.`),et=c}setTimeout(tt,0);break}}try{if(!pn(Ze)){X(`The simulation exceeded ${un} volleys and will likely never kill.`),ue(!1);return}}catch(c){console.log(c),X("The simulation encountered an unexpected error, this is a bug."),ue(!1);return}}if(me>=Re){ue(!1);let c=performance.now()-$e;c/=1e3,X(`Completed in ${c.toFixed(2)} seconds.`),xt(Ze);const u=e("#addComparisonButton");u.removeClass("disabled"),u.prop("disabled",!1)}}tt()}function xt(a){function i(p){return p<=.25?"range-red":p<=.5?"range-orange":p<=.75?"range-yellow":"range-green"}function l(p){return p<=.25?"range-green":p<=.5?"range-yellow":p<=.75?"range-orange":"range-red"}const t=He(),g=e("#lootContainer");g.empty(),qe();const n=a.lootState.items.find(p=>p.totalCorruptionPercent>0||p.totalFried>0)!==void 0,b=a.lootState.items.find(p=>p.totalCritRemoves>0)!==void 0,m=a.lootState.matterDrop/a.lootState.numKills,C=a.lootState.matterBlasted/a.lootState.numKills,k=e('<div class = "loot-box mx-1 my-1"></div>'),G=e(`<span class="loot-box-part-name mx-1">Matter <span class="no-wrap">[<img src="${rt(lt("Matter"))}"/>]</span></span>`),M=e('<grid class = "loot-box-content-grid"></grid>'),T=e("<span>Avg. Death Drop</span>"),B=e(`<span class = "${i(m/a.botState.def.salvageHigh)}">${m.toFixed(1)}/${a.botState.def.salvagePotential}</span>`),Y=e("<span>Avg. Blasted Off</span>"),O=e(`<span>${C.toFixed(1)}</span>`);g.append(k[0]),k.append(G[0]),k.append(M[0]),M.append(T[0]),M.append(B[0]),C>0&&(M.append(Y[0]),M.append(O[0]));for(const p of a.lootState.items){const w=p.numDrops/a.lootState.numKills*100,K=p.totalIntegrity>0?p.totalIntegrity/p.numDrops:0,H=p.totalCorruptionPercent/p.numDrops,j=p.totalFried/a.lootState.numKills*100,J=p.totalCritRemoves>0?p.totalCritRemoves/p.numDrops*100:0,de=e('<div class = "loot-box mx-1 my-1"></div>'),ke=e(`<span class="loot-box-part-name mx-1">${p.item.name} <span class="no-wrap">[<img src="${rt(p.item)}"/>]</span></span>`),L=e('<grid class = "loot-box-content-grid"></grid>'),Be=e("<span>Drop Rate</span>"),ye=e(`<span class = "${i(w/70)}">${w.toFixed(1)}%</span>`),be=e("<span>Avg. Integrity</span>"),Me=e(`<span class = "${i(K/p.item.integrity)}">${K.toFixed(1)}/${p.item.integrity}</span>`),we=e("<span>Avg. Corruption</span>"),Te=e(`<span class = "${l(H/7.5)}">${H.toFixed(1)}%</span>`),Ce=e("<span>Fried Rate</span>"),De=e(`<span class = "${l(j/40)}">${j.toFixed(1)}%</span>`),te=e("<span>Crit Off Rate</span>"),oe=e(`<span>${J.toFixed(1)}%</span>`);g.append(de[0]),de.append(ke[0]),de.append(L[0]),L.append(Be[0]),L.append(ye[0]),L.append(be[0]),L.append(Me[0]),n&&(L.append(we[0]),L.append(Te[0]),L.append(Ce[0]),L.append(De[0])),b&&(L.append(te[0]),L.append(oe[0]))}function r(p,w,K,H){const j=p.filter(J=>w[J]/t>Math.pow(10,-2-K)).map(J=>({x:parseInt(J),y:Math.trunc(w[J]/t*Math.pow(10,2+K))/Math.pow(10,K)}));return j.length<5&&j.push({x:j[j.length-1].x+H,y:0}),j}function I(p){const w=[];let K=0;return p.forEach(H=>{K+=H.y,w.push({x:H.x,y:Math.trunc(K*100)/100})}),w}const v=$.data.datasets[0],f=$.data.datasets[1],E=e("#xAxisVolleys").hasClass("active");let z;const N=e("#endConditionSelect").selectpicker("val");let A,s,x;const V=Object.keys(a.killTus);V.sort((p,w)=>parseFloat(p)-parseFloat(w));const D=r(V,a.killTus,a.offensiveState.melee?3:1,100);We=I(D),E?(s="Volleys",A=1,x="Number of volleys",z=r(Object.keys(a.killVolleys),a.killVolleys,1,1)):(s="Time Units",A=a.offensiveState.volleyTime,x="Number of time units",z=r(V,a.killTus,a.offensiveState.melee?3:1,A));const d=I(z);$.options.scales.x.ticks.stepSize=A,$.options.scales.x.title.text=x,v.data=z,f.data=d,$.options.plugins.title.text=`${s}/${N} vs. ${e("#botSelect").selectpicker("val")}`,$.update(),e("#resultsContainer").removeClass("not-visible")}function _e(){const a=ce(),i=e("#botSelect"),l=i.selectpicker("val");i.empty();const t=Object.keys(Pe);t.sort(),t.forEach(g=>{const n=Pe[g];Vt(n.spoiler,a)&&i.append(`<option>${g}</option>`)}),ee!==void 0&&i.append(`<option>${pe}</option>`),Fe(i),i.selectpicker("val",l),i.selectpicker("val")===null&&i.selectpicker("val","G-34 Mercenary")}function Ae(){const a=ce();_e(),a==="Redacted"?e("#endConditionArchTele").removeClass("not-visible"):e("#endConditionArchTele").addClass("not-visible"),Fe(e("#endConditionSelect"));const i=fe();function l(g,n){n?g.removeClass("not-visible"):g.addClass("not-visible")}l(e("#rangedAccuracyContainer"),!i),l(e("#rangedUtilitiesContainer"),!i),l(e("#rangedUtilitiesContainer2"),!i),l(e("#meleeAnalysisContainer"),i),l(e("#forceBoosterContainer"),i),l(e("#meleeBehaviorContainer"),i),l(e("#meleeUtilitiesContainer"),i);const t=i?"Mining Claw":"Lgt. Assault Rifle";e("#weaponSelectContainer").empty(),ae(t),ae("")}function qe(){e("#showLootYes").hasClass("active")?e("#lootContainer").removeClass("not-visible"):e("#lootContainer").addClass("not-visible")}});
