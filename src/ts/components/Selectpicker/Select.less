@import "../../../styles/common.less";

.select--is-disabled.select--is-disabled {
    opacity: 0.65;
    // Normally the control tries to overwrite the pointer-events to none.
    // However, we do want pointer events when disabled, but we just want to
    // show the not allowed icon instead of allowing actual interaction.
    pointer-events: inherit;

    * {
        cursor: not-allowed !important;
    }
}

// The double selectors are a hack used to out-prioritize the styles defined by
// the react select component. This increases the specificity to allow
// overriding the values without using !important.

// Overall control object
.select__control.select__control {
    background-image: @button-background-gradient;
    border-color: @border-color;
    border-radius: @border-radius;
    color: @font-color;

    min-height: 0;
    box-shadow: none;

    transition: none;

    // Set text and indicator color
    * {
        color: @font-color;
    }

    // | separator line
    .select__indicator-separator {
        background-color: @font-color;
    }
}

.select__control.select__control:hover {
    border-color: @border-color;
    cursor: pointer;
}

.select__control--is-focused.select__control--is-focused,
.select__control.select__control:hover {
    background-image: @button-hover-focus-background-gradient;
    color: @font-button-interaction-color;

    // Set text and indicator color
    * {
        color: @font-button-interaction-color;
    }

    // | separator line
    .select__indicator-separator {
        background-color: @font-button-interaction-color;
    }
}
.select__control.select__control:hover {
    border-color: @element-active-border-color;
}

// Value text
.select__single-value.select__single-value {
    margin-left: 1px;
    margin-right: 1px;
}

// Dropdown arrow indicator icon
.select__dropdown-indicator.select__dropdown-indicator {
    padding: @select-dropdown-indicator-padding;
}

// Value container
.select__value-container.select__value-container {
    padding: @button-padding;

    text-align: center;
}

// Input container
.select__input-container.select__input-container {
    margin: 0;
    padding: 0;
}

// Overall dropdown menu
.select__menu.select__menu {
    border: @border-width solid @border-color;
    border-radius: @border-radius;
    background-color: @dropdown-menu-background-color;
}

// Select option in dropdown
.select__option.select__option,
.select__option--is-selected.select__option--is-selected {
    padding: 0;
    cursor: pointer;
    background-color: unset;
    color: @font-color;

    > * {
        padding: @select-padding;
    }
}

.select__option--is-focused.select__option--is-focused {
    color: @font-button-interaction-color;
    background-color: @dropdown-menu-active-option-background-color;
    outline: @border-width solid @border-color;
}
